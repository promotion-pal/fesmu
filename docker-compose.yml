services:
  postgres:
    container_name: fesmu-pog
    image: postgres:15
    restart: always
    ports:
      - "${SERVER_POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik-network

  backend:
    build:
      context: ./fesmu-back
      dockerfile: Dockerfile
    container_name: fesmu-backend
    env_file:
      - .env
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # HTTP роутер (перенаправление на HTTPS)
      - "traefik.http.routers.fesmu-api.rule=Host(`api.fesmu.promotion-pal.ru`)"
      - "traefik.http.routers.fesmu-api.entrypoints=web"
      - "traefik.http.routers.fesmu-api.middlewares=redirect-to-https"
      # HTTPS роутер (основной)
      - "traefik.http.routers.fesmu-api-secure.rule=Host(`api.fesmu.promotion-pal.ru`)"
      - "traefik.http.routers.fesmu-api-secure.entrypoints=websecure"
      - "traefik.http.routers.fesmu-api-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.fesmu-api.loadbalancer.server.port=4000"

  web:
    build:
      context: ./fesmu-web
      dockerfile: Dockerfile
    container_name: fesmu-web
    env_file:
      - .env
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fesmu-web.rule=Host(`fesmu.promotion-pal.ru`)"
      - "traefik.http.routers.fesmu-web.entrypoints=web"
      - "traefik.http.routers.fesmu-web.middlewares=redirect-to-https"
      - "traefik.http.routers.fesmu-web-secure.rule=Host(`fesmu.promotion-pal.ru`)"
      - "traefik.http.routers.fesmu-web-secure.entrypoints=websecure"
      - "traefik.http.routers.fesmu-web-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.fesmu-web.loadbalancer.server.port=3000"

  admin:
    build:
      context: ./fesmu-admin
      dockerfile: Dockerfile
    container_name: fesmu-admin
    env_file:
      - .env
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fesmu-admin.rule=Host(`admin.fesmu.promotion-pal.ru`)"
      - "traefik.http.routers.fesmu-admin.entrypoints=web"
      - "traefik.http.routers.fesmu-admin.middlewares=redirect-to-https"
      - "traefik.http.routers.fesmu-admin-secure.rule=Host(`admin.fesmu.promotion-pal.ru`)"
      - "traefik.http.routers.fesmu-admin-secure.entrypoints=websecure"
      - "traefik.http.routers.fesmu-admin-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.fesmu-admin.loadbalancer.server.port=4173"

volumes:
  postgres_data:

networks:
  traefik-network:
    external: true
    name: traefik-network
